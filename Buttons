// Functions for Button Control

int charDelay = 25; // UPDATE THIS CODE -- Amount of time between keypresses to avoid key buffer overflows

// initButtons loops through the array of Bounce2 buttons and attaches them as inputs.
// It also sets an interval of 25ms for responsiveness
void initButtons() {
  for (int i = 0; i < numButtons; i++) {
    buttons[i].attach(buttonPins[i], INPUT);
    buttons[i].interval(25);
  }
}



// readButtons loops through the array of Bounce2 buttons and updates each of them.
// It then checks to see if any button has risen and calls sendKey() if it has.
void readButtons() {
  for (int i = 0; i < numButtons; i++) {
    buttons[i].update();
    if (buttons[i].rose()) {
      sendKey(i);
    }
  }
}


// sendKey takes one argument (int k) and uses a switch/case structure to either call the
// sendShortcut(), sendCompount(), or sendMacro() functions. You can also create your own custom functions if needed.
void sendKey(int k) {
  switch (k) {
    case 0:
      sendShortcut('s'); //saves the file
      break;
    case 1:
      sendShortcut('c'); //copies
      break;
    case 2:
      sendShortcut('v'); //pastes
      break;
    case 3:
      sendShortcut('d'); //duplicate current line
      break;
    case 4:
      sendShortcut('l'); //deletes current line
      break;
    case 5:
      sendShortcut('z'); //undo
      break;
    case 6:
      bleKeyboard.print("<?php ?>"); //prints out the basis of a PHP document
      break;
    case 7:
      bleKeyboard.print("echo;"); //prints out an echo
      break;
    case 8:
      bleKeyboard.print("$"); //prints a $
      break;


  }
}

// sendShortcut takes one argument (char c) and combines it with a modifier (CRTL, CMD, ALT, SHIFT, etc.)
// Remember to delay between each press, and release each key. Call releaseAll before ending this function.
void sendShortcut(char c) {
  bleKeyboard.press(KEY_LEFT_CTRL);
  delay(charDelay);
  bleKeyboard.press(c);
  delay(charDelay);
  bleKeyboard.release(c);
  delay(charDelay);
  bleKeyboard.release(KEY_LEFT_CTRL);
  delay(charDelay);
  bleKeyboard.releaseAll();
}


// sendCompound takes one argument (char c) and combines it with multiple modifiers (CRTL, CMD, ALT, SHIFT, etc.)
// Remember to delay between each press, and release each key. Call releaseAll before ending this function.
void sendCompound(char c) {
  //nothiung here lol
}

// sendMacro takes one argument (String s) and sends the string one character at a time.
void sendMacro(String s, int d) {
  int l = s.length() + 1;           // Determine length of string
  char c[l];                        // Create array for characters
  s.toCharArray(c, l);              // Copy characters to array
  for (int i = 0; i < l - 1; i++) { // Loop through character array
    char p = c[i];                  // Get the current character
    bleKeyboard.press(p); delay(d); // Press/Release the key w/ delay
    bleKeyboard.release(p); delay(d);
  }
  bleKeyboard.releaseAll();
}
